[{"/Users/unitsoft/Desktop/Practice/study/calculator/src/index.js":"1","/Users/unitsoft/Desktop/Practice/study/calculator/src/moreCalculator.js":"2","/Users/unitsoft/Desktop/Practice/study/calculator/src/reportWebVitals.js":"3","/Users/unitsoft/Desktop/Practice/study/calculator/src/App.js":"4"},{"size":596,"mtime":1652682016248,"results":"5","hashOfConfig":"6"},{"size":5530,"mtime":1652769848880,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1652675619848,"results":"8","hashOfConfig":"6"},{"size":1491,"mtime":1652689829593,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j58xqj",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/unitsoft/Desktop/Practice/study/calculator/src/index.js",[],[],"/Users/unitsoft/Desktop/Practice/study/calculator/src/moreCalculator.js",["23","24"],[],"import React, { useState, useEffect } from 'react';\n\n// 담는 값 1, 2\n// 계산할 값yat\n// 결과값\n\n// 숫자 온클릭시 \n// oper에 값이 없으면\n// moreFirst에 담고\n// 계속 담다가\n\n// oper가 담기면\n\n// moreSecond에 담고\n// =을 누르면\n// 결과값 도출후\n\n// 첫번째 값에 결과값을 담고\n// oper와 두번째 값을 초기화 시키기?\n\nfunction More() {\n  const [moreFirst, setmoreFirst] = useState(0);\n  const [moreOper, setmoreOper] = useState();\n  const [moreSecond, setmoreSecond] = useState(\"\");\n  const [moreresult, setmoreResult] = useState(\"\");\n\n\n    const numArray =[\n      [\"ac\", \"+/-\",\"%\", \"/\"],\n      [7, 8, 9 , \"*\"],\n      [4, 5, 6, \"-\"],\n      [1, 2, 3, \"+\"],\n      [0, \".\", \"=\"]\n    ]\n \n\n    const clickNum = (e) => {\n        \n        if(!moreOper){\n            // 결과값에 값 이어서 추가하기\n            if(typeof(moreFirst)===\"number\"){\n                setmoreFirst(\n                    String(moreFirst).concat(e.target.value)\n                )\n            }else{\n                setmoreFirst(\n                    moreFirst.concat(e.target.value)\n                )\n            }\n            \n        }else{\n            setmoreSecond(\n                moreSecond.concat(e.target.value)\n            )\n        }\n    }\n\n    const moreCalcul = () =>{\n        if (moreOper === \"+\"){\n            setmoreResult(parseInt(moreFirst)+parseInt(moreSecond))      \n          }else if(moreOper === \"-\"){\n            setmoreResult(parseInt(moreFirst)-parseInt(moreSecond))     \n          }else if(moreOper === \"*\"){\n            setmoreResult(parseInt(moreFirst)*parseInt(moreSecond))     \n          }else if(moreOper === \"/\"){\n            setmoreResult(parseInt(moreFirst)/parseInt(moreSecond))     \n          }else if(moreOper === \"%\"){\n            setmoreResult(parseInt(moreFirst)%parseInt(moreSecond))    \n          }\n    }\n\n    useEffect(() => {\n        setmoreFirst(moreresult)\n        setmoreOper();\n        setmoreSecond(\"\");\n    },[moreresult])\n\n    const reset = () => {\n          setmoreFirst(\"\");\n          setmoreOper();\n          setmoreSecond(\"\");\n          setmoreResult(\"\");\n  }\n  // \n\n \n\n  function keyevent(e) {\n\t\tconst keycode = e.keyCode;\n    const buttons = document.querySelectorAll(\"ul li button\");\n    const total = buttons.length;\n\n    const cols = 4;\n\t\tconst idx = Array.from(document.querySelectorAll('ul li button')).indexOf(e.target);\n\n\t\tswitch (keycode) {\n\t\t\t\n\t\t\tcase(37) : // Left\n\t\t\t\tif(idx===0){\n\t\t\t\t\treturn false;      \n\t\t\t\t}else{  \n\t\t\t\t\tdocument.querySelectorAll('ul li button')[idx-1].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase(38) : // Up\n\t\t\t\tif(idx < cols){\n\t\t\t\t\treturn false;      \n\t\t\t\t}else if(idx===total-1 || idx===(total-2)){\n          document.querySelectorAll('ul li button')[idx-3].focus();\n        }else{\n\t\t\t\t\tdocument.querySelectorAll('ul li button')[idx-cols].focus();\n\t\t\t\t} \n\t\t\t\tbreak;\n\t\t\tcase(39) : // Right\n\t\t\t\tif(idx===(total-1)){ \n\t\t\t\t\treturn false;      \n\t\t\t\t}else{      \n\t\t\t\t\tdocument.querySelectorAll('ul li button')[idx+1].focus();\n\t\t\t\t} \n\t\t\t\tbreak;\n\n\t\t\tcase (40) : // Down\n\t\t\t\tif(idx+3 >= total){\n\t\t\t\t\treturn false;         \n\t\t\t\t}else if(idx===(total-6)|| idx===(total-5) || idx===(total-4)){\n          document.querySelectorAll('ul li button')[idx+3].focus();\n        }\n        else{\n\t\t\t\t\tdocument.querySelectorAll('ul li button')[idx+cols].focus();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault : \n\t\t\t\treturn false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n  // keyevent();\n  return (\n    <div className=\"more\" onKeyDown={(e)=>keyevent(e)}>\n      <span>{moreFirst}</span>\n      <span>{moreOper}</span>\n      <span>{moreSecond}</span>\n        <br />\n        {/* 단순 버튼 나열\n      <button onClick={(e)=>clickNum(e)} value=\"0\" onKeyDown={(e)=>{if(e.key === 'Enter') {clickNum(e)}}}>0</button>\n      <button onClick={(e)=>clickNum(e)} value=\"1\">1</button>\n      <button onClick={(e)=>clickNum(e)} value=\"2\">2</button>\n      <button onClick={(e)=>clickNum(e)} value=\"3\">3</button>\n      <button onClick={(e)=>clickNum(e)} value=\"4\">4</button>\n      <button onClick={(e)=>clickNum(e)} value=\"5\">5</button>\n      <button onClick={(e)=>clickNum(e)} value=\"6\">6</button>\n      <button onClick={(e)=>clickNum(e)} value=\"7\">7</button>\n      <button onClick={(e)=>clickNum(e)} value=\"8\">8</button>\n      <button onClick={(e)=>clickNum(e)} value=\"9\">9</button>\n\n      <button onClick={(e)=>setmoreOper(e.target.value)} value=\"+\">+</button>\n      <button onClick={(e)=>setmoreOper(e.target.value)} value=\"-\">-</button>\n      <button onClick={(e)=>setmoreOper(e.target.value)} value=\"*\">*</button>\n      <button onClick={(e)=>setmoreOper(e.target.value)} value=\"/\">/</button>\n      <button onClick={(e)=>setmoreOper(e.target.value)} value=\"%\">%</button>\n      <br />\n      <button onClick={moreCalcul}>=</button>\n      <button onClick={reset}>ac</button>\n      <button onClick={minus}>+/-</button>\n      */}\n      {\n        numArray.map( (o,i) => <ul key={i}><li>\n          {\n            o.map((k,ii)=> <button key={ii} value={k} id={k} onClick={(e) =>\n              {if(typeof(k)== \"number\") {\n                clickNum(e)\n              }else if(k===\"+\" || k===\"-\" || k===\"*\" || k ===\"/\" || k ===\"%\") {\n                setmoreOper(e.target.value)\n              }else if(k===\"ac\"){\n                reset();\n              }else if(k===\"=\"){\n                moreCalcul();\n              }else if(k===\"+/-\"){\n                minus();\n              }\n          }\n            }>{k}</button>)\n          }\n       </li></ul>)\n      }\n\n    </div>\n  );\n}\n\nexport default More;\n","/Users/unitsoft/Desktop/Practice/study/calculator/src/reportWebVitals.js",[],[],"/Users/unitsoft/Desktop/Practice/study/calculator/src/App.js",["25"],[],{"ruleId":"26","severity":1,"message":"27","line":135,"column":5,"nodeType":"28","messageId":"29","endLine":135,"endColumn":11},{"ruleId":"30","severity":2,"message":"31","line":181,"column":17,"nodeType":"32","messageId":"33","endLine":181,"endColumn":22},{"ruleId":"34","severity":1,"message":"35","line":2,"column":27,"nodeType":"32","messageId":"36","endLine":2,"endColumn":36},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-undef","'minus' is not defined.","Identifier","undef","no-unused-vars","'useEffect' is defined but never used.","unusedVar"]