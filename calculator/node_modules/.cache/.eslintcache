[{"/Users/unitsoft/Desktop/Practice/begin-react/src/index.js":"1","/Users/unitsoft/Desktop/Practice/begin-react/src/reportWebVitals.js":"2","/Users/unitsoft/Desktop/Practice/begin-react/src/App.js":"3","/Users/unitsoft/Desktop/Practice/begin-react/src/moreCalculator.js":"4"},{"size":596,"mtime":1652682016248,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1652675619848,"results":"7","hashOfConfig":"6"},{"size":1491,"mtime":1652689829593,"results":"8","hashOfConfig":"6"},{"size":3848,"mtime":1652758464808,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"f2wuzh",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/unitsoft/Desktop/Practice/begin-react/src/index.js",[],[],[],"/Users/unitsoft/Desktop/Practice/begin-react/src/reportWebVitals.js",[],[],"/Users/unitsoft/Desktop/Practice/begin-react/src/App.js",["24"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\n\n\n// simple calculator\n\nfunction App() {\n  const [first, setFirst] = useState(0);\n  const [second, setSecond] = useState(0);\n  const [operator, setOper] = useState(\"+\");\n  const [result, setResult] = useState(0);\n\n  const calcul = () => {\n    if (operator === \"+\"){\n      setResult(parseInt(first)+parseInt(second))      \n    }else if(operator === \"-\"){\n      setResult(parseInt(first)-parseInt(second))     \n    }else if(operator === \"*\"){\n      setResult(parseInt(first)*parseInt(second))     \n    }else if(operator === \"/\"){\n      setResult(parseInt(first)/parseInt(second))     \n    }else if(operator === \"%\"){\n      setResult(parseInt(first)%parseInt(second))    \n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <input type=\"number\" placeholder=\"first\" onChange={(e) => setFirst(e.target.value)}></input>\n      <select id=\"seledtBox\" onChange={(e) => setOper(e.target.value)}>\n        <option id=\"0\" value=\"+\">+</option>\n        <option id=\"1\" value=\"-\">-</option>\n        <option id=\"2\" value=\"*\">*</option>\n        <option id=\"3\" value=\"/\">/</option>\n        <option id=\"4\" value=\"%\">%</option>\n      </select>\n      {/* <input type=\"text\" onChange={(e)=>setOper(e.target.value)}></input> */}\n      <input type=\"number\" placeholder=\"second\" onChange={(e) => setSecond(e.target.value)}></input>\n      <button onClick={calcul}>calculator</button>\n      <p>{result}</p>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/unitsoft/Desktop/Practice/begin-react/src/moreCalculator.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":2,"column":27,"nodeType":"27","messageId":"28","endLine":2,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]