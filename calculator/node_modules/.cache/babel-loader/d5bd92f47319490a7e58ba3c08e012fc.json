{"ast":null,"code":"var _jsxFileName = \"/Users/unitsoft/Desktop/Practice/study/calculator/src/UseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import { Button } from \"react-bootstrap\";\n\nimport { useForm, register } from \"react-hook-form\"; // react-hook-form import\n// import { useState } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseForm() {\n  _s();\n\n  const {\n    register,\n    // handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); //   console.log(watch());\n  //   const onSubmit = (data) => {\n  //     console.log(data);\n  //   };\n  //   const onError = (error) => {\n  //     console.log(error);\n  //   };\n\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleChange = e => {\n    setValues({ ...values,\n      [e.target.value]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(JSON.stringify(values, null, 2));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <hr />\n    //   <p>useform을 사용한</p>\n    //   <form onSubmit={handleSubmit(onSubmit, onError)}>\n    //     <input\n    //       {...register(\"test\", {\n    //         required: true,\n    //         minLength: {\n    //           value: 5,\n    //           message: \"Username must be longer than 5 characters\",\n    //         },\n    //       })}\n    //     />\n    //     <input\n    //       {...register(\"test1\", {\n    //         required: true,\n    //         minLength: {\n    //           value: 5,\n    //           message: \"Username must be longer than 5 characters\",\n    //         },\n    //       })}\n    //     />\n    //     <button\n    //       type=\"submit\"\n    //       onClick={() => {\n    //         const values = getValues(); // { test: \"test-input\", test1: \"test1-input\" }\n    //         const singleValue = getValues(\"test\"); // \"test-input\"\n    //         const multipleValues = getValues([\"test\", \"test1\"]);\n    //         // { test: \"test-input\", test1: \"test1-input\" }\n    //         console.log(values);\n    //         console.log(singleValue);\n    //         console.log(multipleValues);\n    //         setval(values);\n    //       }}\n    //     >\n    //       Get Values\n    //     </button>\n    //     {errors?.test?.message && <h1>{errors?.test?.message}</h1>}\n    //   </form>\n    //   {JSON.stringify(val)}\n    // </div>\n    // 로그인\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChasnge: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(UseForm, \"GijccJsZl9gC/TixhqA6rUIHA18=\", false, function () {\n  return [useForm];\n});\n\n_c = UseForm;\nexport default UseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseForm\");","map":{"version":3,"names":["React","useState","useForm","register","UseForm","formState","errors","values","setValues","email","password","handleChange","e","target","value","handleSubmit","preventDefault","alert","JSON","stringify"],"sources":["/Users/unitsoft/Desktop/Practice/study/calculator/src/UseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { Button } from \"react-bootstrap\";\nimport { useForm, register } from \"react-hook-form\"; // react-hook-form import\n// import { useState } from \"react\";\n\nfunction UseForm() {\n  const {\n    register,\n    // handleSubmit,\n    formState: { errors },\n  } = useForm();\n  //   console.log(watch());\n  //   const onSubmit = (data) => {\n  //     console.log(data);\n  //   };\n  //   const onError = (error) => {\n  //     console.log(error);\n  //   };\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.value]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    alert(JSON.stringify(values, null, 2));\n  };\n  return (\n    // <div>\n    //   <hr />\n    //   <p>useform을 사용한</p>\n    //   <form onSubmit={handleSubmit(onSubmit, onError)}>\n    //     <input\n    //       {...register(\"test\", {\n    //         required: true,\n    //         minLength: {\n    //           value: 5,\n    //           message: \"Username must be longer than 5 characters\",\n    //         },\n    //       })}\n    //     />\n    //     <input\n    //       {...register(\"test1\", {\n    //         required: true,\n    //         minLength: {\n    //           value: 5,\n    //           message: \"Username must be longer than 5 characters\",\n    //         },\n    //       })}\n    //     />\n\n    //     <button\n    //       type=\"submit\"\n    //       onClick={() => {\n    //         const values = getValues(); // { test: \"test-input\", test1: \"test1-input\" }\n    //         const singleValue = getValues(\"test\"); // \"test-input\"\n    //         const multipleValues = getValues([\"test\", \"test1\"]);\n    //         // { test: \"test-input\", test1: \"test1-input\" }\n    //         console.log(values);\n    //         console.log(singleValue);\n    //         console.log(multipleValues);\n    //         setval(values);\n    //       }}\n    //     >\n    //       Get Values\n    //     </button>\n    //     {errors?.test?.message && <h1>{errors?.test?.message}</h1>}\n    //   </form>\n    //   {JSON.stringify(val)}\n    // </div>\n\n    // 로그인\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={values.email}\n        onChange={handleChange}\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={values.password}\n        onChasnge={handleChange}\n      />\n      <button type=\"submit\">로그인</button>\n    </form>\n  );\n}\n\nexport default UseForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,iBAAlC,C,CAAqD;AACrD;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAM;IACJD,QADI;IAEJ;IACAE,SAAS,EAAE;MAAEC;IAAF;EAHP,IAIFJ,OAAO,EAJX,CADiB,CAMjB;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,MAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;IACnCQ,KAAK,EAAE,EAD4B;IAEnCC,QAAQ,EAAE;EAFyB,CAAD,CAApC;;EAIA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BJ,SAAS,CAAC,EACR,GAAGD,MADK;MAER,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,GAAkBF,CAAC,CAACC,MAAF,CAASC;IAFnB,CAAD,CAAT;EAID,CALD;;EAOA,MAAMC,YAAY,GAAIH,CAAD,IAAO;IAC1BA,CAAC,CAACI,cAAF;IACAC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeZ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;EACD,CAHD;;EAIA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;MAAM,QAAQ,EAAEQ,YAAhB;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,OAFP;QAGE,KAAK,EAAER,MAAM,CAACE,KAHhB;QAIE,QAAQ,EAAEE;MAJZ;QAAA;QAAA;QAAA;MAAA,QADF,eAOE;QACE,IAAI,EAAC,UADP;QAEE,IAAI,EAAC,UAFP;QAGE,KAAK,EAAEJ,MAAM,CAACG,QAHhB;QAIE,SAAS,EAAEC;MAJb;QAAA;QAAA;QAAA;MAAA,QAPF,eAaE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA;MAAA;MAAA;MAAA;IAAA;EA7CF;AA6DD;;GAzFQP,O;UAKHF,O;;;KALGE,O;AA2FT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}